/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, PostStats as PrismaPostStats } from "@prisma/client";

export class PostStatsServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.PostStatsCountArgs, "select">
  ): Promise<number> {
    return this.prisma.postStats.count(args);
  }

  async postStatsItems(
    args: Prisma.PostStatsFindManyArgs
  ): Promise<PrismaPostStats[]> {
    return this.prisma.postStats.findMany(args);
  }
  async postStats(
    args: Prisma.PostStatsFindUniqueArgs
  ): Promise<PrismaPostStats | null> {
    return this.prisma.postStats.findUnique(args);
  }
  async createPostStats(
    args: Prisma.PostStatsCreateArgs
  ): Promise<PrismaPostStats> {
    return this.prisma.postStats.create(args);
  }
  async updatePostStats(
    args: Prisma.PostStatsUpdateArgs
  ): Promise<PrismaPostStats> {
    return this.prisma.postStats.update(args);
  }
  async deletePostStats(
    args: Prisma.PostStatsDeleteArgs
  ): Promise<PrismaPostStats> {
    return this.prisma.postStats.delete(args);
  }
}
